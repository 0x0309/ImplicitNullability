using System.Threading.Tasks;

namespace ImplicitNullability.Plugin.Tests.test.data.Integrative.TypeHighlightingTests
{
    public class TypeHighlightingInvalidDeclarationsSample
    {
        public /* missing type part triggers null "type usage" */ <|string|(0)> SomeMethod() { }

        public delegate /* missing type part triggers null "type usage" */ <|string|(1)> SomeDelegate();

        public static /* missing return type */ operator ++ { }
    }

    public class ItemTypeHighlightingInvalidDeclarationsSample
    {
        public async |Task|(2)< /* missing type triggers null item "type usage" */ > AsyncMethod()
        {
            return await Async.NotNullResult("");
        }
    }
}
---------------------------------------------------------
(0): ReSharperImplicitNullabilityTypeHighlighting: 'string' is (explicitly or implicitly) [NotNull]
(1): ReSharperImplicitNullabilityTypeHighlighting: 'string' is (explicitly or implicitly) [NotNull]
(2): ReSharperImplicitNullabilityTypeHighlighting: 'Task' is (explicitly or implicitly) [NotNull]
